Countents 
javascript slice
Replace methods
uppercase methods
random methods
frontend javascript

#javascript tricks
moleArr[programstartSeed].style.display = "block"
holeArr[programstartSeed].style.display = "none"


#memorized functions
length

continue on regex experiment
//we need to learn regex
//slice
#slice
Javascript
variable.slice(startindex,endindex)
variable.slice(1) will return a string from the 1 index position to end of its index position
//endslice
#sort
Python
[list].sort() - sorts in assendening for numbers or strings
[list].sort(reverse = true, key) - sorts in reverse and key is an optional parameter to set sorting crieteria - the return vale is none
[list].sort(key=len) will sort accoriding to the lenght of the characters

the next will sort by dictionary year key
programming_languages = [{'language':'Python','year':1991},
{'language':'Swift','year':2014},
{'language':'Java', 'year':1995},
{'language':'C++','year':1985},
{'language':'Go','year':2007},
{'language':'Rust','year':2010},
]

def get_year(element):
    return element['year']

programming_languages.sort(key=get_year)

print(programming_languages)


or you can combine function with a lambda
programming_languages.sort(key=lambda element: element['year'])

sorted(function) will output a new list instead of modifying the originioal
---------------------
//end sort


content = content.replace("â€™","'")#added this line to correct messed up unicode characters incomming from gpt3

///uppercase methods

Python
variable.title()Pyhon makes the first letter of each word in uppercase

//random methods
javascript random
variable = Math.floor(Math.random()*10) -  would select a value between 0 and 9

//frontend javascript
variable = document.querySelector('css selector').innerText = "value" - this will change the innertext of the selected querySelector

variable.value - will extract the text of what ever is located in that css selector we defined up above





##first we capitalize our h2 titles in capital case added 2/3/20223
    find = re.compile(r'<h2>(.*?)</h2>')
    # results = find.search(first)
    results = find.findall(first)


    # print("h2",results.group())
    print("h2", results)

    #### end 2/3/2023 edit



                ## 2/3/2023
            find = re.compile(r'<h2>(.*?)</h2>')
            results = find.search(y)
            print("results, ", results)
            ## end 2/3/2023